// Top-level build file where you can add configuration options common to all sub-projects/modules.
ext.versions = [
        compile_sdk   : 28,
        min_sdk       : 16,
        target_sdk    : 28,
        build_tools   : "28.0.3",
        support_lib   : "28.0.0",
        zxing         : "3.3.3",
        barcodescanner: "1.9.13"
]

ext.libraries = [
        support_v4          : "com.android.support:support-v4:$versions.support_lib",
        appcompat_v7        : "com.android.support:appcompat-v7:$versions.support_lib",
        design_support      : "com.android.support:design:$versions.support_lib",
        zxing_core          : "com.google.zxing:core:$versions.zxing",
        barcodescanner_core : "me.dm7.barcodescanner:core:$versions.barcodescanner",
        barcodescanner_zbar : "me.dm7.barcodescanner:zbar:$versions.barcodescanner",
        barcodescanner_zxing: "me.dm7.barcodescanner:zxing:$versions.barcodescanner"
]

buildscript {
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath 'com.google.gms:google-services:4.3.2'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

allprojects {
    group = 'me.dm7.barcodescanner'
    version = '1.9.13'

    repositories {
        google()
        jcenter()
    }

    ext {
        isLibrary = false
    }
}

subprojects {
    afterEvaluate { Project project ->
        ext.pluginContainer = project.getPlugins()
        if(ext.pluginContainer.hasPlugin("com.android.application") || ext.pluginContainer.hasPlugin("com.android.library")) {
            android {
                compileSdkVersion versions.compile_sdk
                buildToolsVersion versions.build_tools

                android {
                    lintOptions {
                        abortOnError false
                    }
                }

                defaultConfig {
                    minSdkVersion versions.min_sdk
                    targetSdkVersion versions.target_sdk
                    versionCode 1913
                    versionName "1.9.13"
                }
            }
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def bintrayUser = properties.getProperty('bintray.user')
        def bintrayApikey = properties.getProperty('bintray.apikey')

        if(project.isLibrary && bintrayUser?.trim() && bintrayApikey?.trim()) {
            configure(project) {
                apply plugin: 'com.github.dcendents.android-maven'
                group = project.group                               // Maven Group ID for the artifact

                install {
                    repositories.mavenInstaller {
                        pom.project {
                            name project.pomName
                            version project.version
                            groupId project.group
                            packaging project.pomPackaging
                            artifactId project.pomArtifactId
                            description project.pomDescription
                            url 'https://github.com/dm77/barcodescanner'

                            scm {
                                url 'scm:git@github.com:dm77/barcodescanner.git'
                                connection 'scm:git@github.com:dm77/barcodescanner.git'
                                developerConnection 'scm:git@github.com:dm77/barcodescanner.git'
                            }

                            licenses {
                                license {
                                    name 'The Apache Software License, Version 2.0'
                                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                                    distribution 'repo'
                                }
                            }

                            developers {
                                developer {
                                    id 'dm77'
                                    name 'Dushyanth Maguluru'
                                    email 'dushyanth.maguluru@gmail.com'
                                }
                            }
                        }
                    }
                }

                apply plugin: 'com.jfrog.bintray'

                version = '1.9.13'

                if (project.hasProperty("android")) { // Android libraries
                    task sourcesJar(type: Jar) {
                        classifier = 'sources'
                        from android.sourceSets.main.java.srcDirs
                    }
                } else { // Java libraries
                    task sourcesJar(type: Jar, dependsOn: classes) {
                        classifier = 'sources'
                        from sourceSets.main.allSource
                    }
                }


                artifacts {
                    archives sourcesJar
                }

                bintray {
                    user = properties.getProperty("bintray.user")
                    key = properties.getProperty("bintray.apikey")

                    configurations = ['archives']
                    pkg {
                        repo = 'maven'
                        name = 'me.dm7.barcodescanner:' + project.pomArtifactId
                        desc = 'Barcode Scanner Libraries for Android'
                        websiteUrl = 'https://github.com/dm77/barcodescanner'
                        vcsUrl = 'https://github.com/dm77/barcodescanner.git'
                        licenses = ["Apache-2.0"]
                        publish = true
                        publicDownloadNumbers = true
                        version {
                            desc = 'Barcode Scanner Libraries for Android'
                            gpg {
                                sign = false
                            }
                        }
                    }
                }
            }
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}

//task wrapper(type: Wrapper) {
//    gradleVersion = '4.10.1'
//}
